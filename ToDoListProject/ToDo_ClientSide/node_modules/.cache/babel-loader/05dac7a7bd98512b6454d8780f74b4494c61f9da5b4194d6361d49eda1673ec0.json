{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saram\\\\OneDrive\\\\\\u05DE\\u05E1\\u05DE\\u05DB\\u05D9\\u05DD\\\\\\u05E9\\u05E8\\u05D4\\\\\\u05E4\\u05E8\\u05E7\\u05D8\\u05D9\\u05E7\\u05D5\\u05D3\\\\\\u05E4\\u05E8\\u05E7\\u05D8\\u05D9\\u05E7\\u05D5\\u05D3 3\\\\ToDoListReact\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport service from './service.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [Id, setId] = useState(2);\n  async function getTodos() {\n    const todos = await service.getTasks();\n    setTodos(todos);\n  }\n  async function createTodo(e) {\n    e.preventDefault();\n    await service.addTask(newTodo, Id);\n    setId(prevId => prevId + 1);\n    setNewTodo(\"\"); //clear input\n    await getTodos(); //refresh tasks list (in order to see the new one)\n  }\n  async function updateCompleted(todo, isComplete) {\n    await service.setCompleted(todo.id, isComplete);\n    await getTodos(); //refresh tasks list (in order to see the updated one)\n  }\n  async function deleteTodo(id) {\n    await service.deleteTask(id);\n    await getTodos(); //refresh tasks list\n  }\n  useEffect(() => {\n    getTodos();\n  }, []);\n  /*#__PURE__*/_jsxDEV(\"label\", {\n    onDoubleClick: () => handleEdit(todo),\n    children: editingTodoId === todo.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"edit\",\n      value: editedTodoName,\n      onChange: e => setEditedTodoName(e.target.value),\n      onBlur: () => handleSaveEdit(todo),\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }, this) : todo.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"todoapp\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: createTodo,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"new-todo\",\n          placeholder: \"Well, let's take on the day\",\n          value: newTodo,\n          onChange: e => setNewTodo(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"main\",\n      style: {\n        display: \"block\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"todo-list\",\n        children: todos.map(todo => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: todo.isComplete ? \"completed\" : \"\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"view\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"toggle\",\n                type: \"checkbox\",\n                defaultChecked: todo.isComplete,\n                onChange: e => updateCompleted(todo, e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                onDoubleClick: () => handleEdit(todo),\n                children: editingTodoId === todo.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"edit\",\n                  value: editedTodoName,\n                  onChange: e => setEditedTodoName(e.target.value),\n                  onBlur: () => handleSaveEdit(todo),\n                  autoFocus: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 21\n                }, this) : todo.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"destroy\",\n                onClick: () => deleteTodo(todo.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)\n          }, todo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6FX9S4KAE0ewxA2Li9Pz4WKg1M0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","service","jsxDEV","_jsxDEV","App","_s","newTodo","setNewTodo","todos","setTodos","Id","setId","getTodos","getTasks","createTodo","e","preventDefault","addTask","prevId","updateCompleted","todo","isComplete","setCompleted","id","deleteTodo","deleteTask","onDoubleClick","handleEdit","children","editingTodoId","className","value","editedTodoName","onChange","setEditedTodoName","target","onBlur","handleSaveEdit","autoFocus","fileName","_jsxFileName","lineNumber","columnNumber","name","onSubmit","placeholder","style","display","map","type","defaultChecked","checked","onClick","_c","$RefreshReg$"],"sources":["C:/Users/saram/OneDrive/מסמכים/שרה/פרקטיקוד/פרקטיקוד 3/ToDoListReact/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport service from './service.js';\r\n\r\nfunction App() {\r\n  const [newTodo, setNewTodo] = useState(\"\");\r\n  const [todos, setTodos] = useState([]);\r\n  const [Id, setId]=useState(2);\r\n\r\n\r\n  async function getTodos() {\r\n    const todos = await service.getTasks();\r\n    setTodos(todos);\r\n  }\r\n\r\n  async function createTodo(e) {\r\n    e.preventDefault();\r\n    await service.addTask(newTodo,Id);\r\n    setId(prevId => prevId + 1);\r\n    setNewTodo(\"\");//clear input\r\n    await getTodos();//refresh tasks list (in order to see the new one)\r\n  }\r\n\r\n  async function updateCompleted(todo, isComplete) {\r\n    await service.setCompleted(todo.id, isComplete);\r\n    await getTodos();//refresh tasks list (in order to see the updated one)\r\n  }\r\n\r\n  async function deleteTodo(id) {\r\n    await service.deleteTask(id);\r\n    await getTodos();//refresh tasks list\r\n  }\r\n\r\n  useEffect(() => {\r\n    getTodos();\r\n  }, []);\r\n  <label onDoubleClick={() => handleEdit(todo)}>{editingTodoId === todo.id ? (\r\n                    <input \r\n                      className=\"edit\" \r\n                      value={editedTodoName} \r\n                      onChange={(e) => setEditedTodoName(e.target.value)} \r\n                      onBlur={() => handleSaveEdit(todo)}\r\n                      autoFocus\r\n                    />\r\n                  ) : (\r\n                    todo.name\r\n                  )}</label>\r\n\r\n  return (\r\n    <section className=\"todoapp\">\r\n      <header className=\"header\">\r\n        <h1>todos</h1>\r\n        <form onSubmit={createTodo}>\r\n          <input className=\"new-todo\" placeholder=\"Well, let's take on the day\" value={newTodo} onChange={(e) => setNewTodo(e.target.value)} />\r\n        </form>\r\n      </header>\r\n      <section className=\"main\" style={{ display: \"block\" }}>\r\n        <ul className=\"todo-list\">\r\n          {todos.map(todo => {\r\n            return (\r\n              <li className={todo.isComplete ? \"completed\" : \"\"} key={todo.id}>\r\n                <div className=\"view\">\r\n                  <input className=\"toggle\" type=\"checkbox\" defaultChecked={todo.isComplete} onChange={(e) => updateCompleted(todo, e.target.checked)} />\r\n                  <label onDoubleClick={() => handleEdit(todo)}>{editingTodoId === todo.id ? (\r\n                    <input \r\n                      className=\"edit\" \r\n                      value={editedTodoName} \r\n                      onChange={(e) => setEditedTodoName(e.target.value)} \r\n                      onBlur={() => handleSaveEdit(todo)}\r\n                      autoFocus\r\n                    />\r\n                  ) : (\r\n                    todo.name\r\n                  )}</label>\r\n                  <button className=\"destroy\" onClick={() => deleteTodo(todo.id)}></button>\r\n                </div>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </section>\r\n    </section >\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}